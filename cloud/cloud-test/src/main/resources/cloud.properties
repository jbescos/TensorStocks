user.active=true
user.email=XXXX@XXXX.com
user.exchange=BINANCE

binance.public.key=XXXXXXXXXXXXXXXXXXXXXXXXXXX
binance.private.key=XXXXXXXXXXXXXXXXXXXXXXXXXXX

kucoin.public.key=XXXXXXXXXXXXXXXXXXXXXXXXXXX
kucoin.private.key=XXXXXXXXXXXXXXXXXXXXXXXXXXX
kucoin.passphrase.key=XXXXXXXXXXXXXXXXXXXXXXXXXXX
kucoin.commerce.key=XXXXXXXXXXXXXXXXXXXXXXXXXXX
kucoin.version=2

mizar.api.key=XXXXXXXXXXXXXXXXXXXXXXXXXXX
mizar.strategy.id=-1

# Binance is 10 and Kucoin I think is 2
min.transaction=12
# -1 disables it. Otherwise it never buys more than available USD multiplied by this factor.
limit.transaction.ratio.amount=-1
# -1 disables it. Otherwise it never buys more than the specified. In case of Mizar this is mandatory and MUST match the specified amount in the strategy
limit.transaction.amount=-1
# 10%
broker.commission=0.10
google.topic.id=storage
# Never sell by less than the specified in USDT per unit
bot.min.sell.TESTUSDT=101.0

# Symbols that the bot can sell and buy
bot.white.list=
# It will never buy the specified symbols. It is useful if you want the bot sells them but never buy it again.
bot.never.buy=
# Sell or buy a limit of % of what is available
bot.buy.reducer=1
# If true, the factor will not be used to reduce the amount to buy. If this is true, make sure bot.buy.reducer is not 1 because of the float imprecision
bot.buy.ignore.factor.reducer=false
bot.buy.comission=0.001
bot.sell.comission=0.001
# The lower, more close to MIN before buying
bot.percentile.buy.factor=0.2
# The higher, more difference between MIN and MAX, so the bot will buy less often. For bearish is better to buy less and for bullish is better to buy more.
bot.min.max.relation.buy=0.2
# If there are previous transactions, it will sell when benefit is higher than the specified.
bot.max.profit.sell=0.06
# Will sell if value goes above specified
bot.min.profit.sell=0.03
# Profit lowest limit is the next. This makes sense when bot.profit.days.substractor is a negative value
bot.lowest.allowed.profit.sell=-1
# Every days that passes after the last purchase, it will discount the value to the bot.min.profit.sell if negative, otherwise it will be added.
bot.profit.days.substractor=0
# Default hours to be analyzed
bot.hours.back.statistics=48
bot.months.back.transactions=12
# Max purchases per symbol
bot.max.open.positions=10
ewma.constant=0.01
ewma.2.constant=0.001
# Enables the PanicBroker
bot.panic.enable=true
# If BTC decreases more than that, the PanicBroker will sell everything and start the panic period
bot.panic.ratio=0.12
# PanicBroker will not do anything for the specified symbol during next days after a PANIC_SELL. Must be lower than bot.days.back.transactions
bot.panic.days=12
# In panic period, it will replace the factor bot.min.max.relation.buy, so it will buy less often
bot.panic.factor=0.7

# Factor in LimitsBroker will be multiplied by next value, making bigger purchases when difference between min and max is big
bot.limits.enable=true
bot.limits.factor.multiplier=2
bot.limits.fixed.sell.SHIBUSDT=0.00000750
bot.limits.fixed.buy.SHIBUSDT=0.00000710
bot.limits.fixed.sell.BNBUSDT=500
bot.limits.fixed.buy.BNBUSDT=250
bot.limits.fixed.sell.ETHUSDT=3900
bot.limits.fixed.buy.ETHUSDT=1800
bot.limits.fixed.sell.BTCUSDT=50000
bot.limits.fixed.buy.BTCUSDT=30000